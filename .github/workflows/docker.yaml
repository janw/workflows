name: Docker

on:
  workflow_call:
    inputs:
      build-platforms:
        required: false
        type: string
        default: linux/amd64,linux/arm64/v8,linux/arm/v7
      tag-latest:
        required: false
        type: boolean
        default: false
      image-name:
        required: false
        type: string
        default: ${{ github.repository }}
      skip-hadolint:
        required: false
        type: boolean
        default: false
      build-args:
        required: false
        type: string

jobs:
  lint:
    runs-on: ubuntu-latest
    if: '! inputs.skip-hadolint'
    outputs:
      results: ${{ steps.hadolint.outputs.results }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run hadolint
        id: hadolint
        uses: hadolint/hadolint-action@v3.1.0

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: "ghcr.io/${{ inputs.image-name }}"
          tags: |
            type=ref,event=pr
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{version}}
            type=raw,value=edge,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && inputs.tag-latest }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.build-platforms }}
          build-args: ${{ inputs.build-args }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
